how to use ``100-matrix_mul.py``
=====================================

Function description:
---------------------
    `` def matrix_mul(m_a, m_b):``  multiplies two matrices.

Prototype:
----------
    ``def matrix_mul(m_a, m_b):``.

Parametres:
-----------
    ``m_a`` and ``m_b`` : two matrices

Return:
-------
    a new matrix that represent the multiplication of ``m_a`` by ``m_b``.

..Import  matrix_mul from the ``100-matrix_mul`` module::

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

..check the normal cases::
==========================

>>> m_a = [[4, 3, 7, 5], [0, 11, 7, 2]]
>>> m_b = [[5, 1, 2], [1, 5, 0], [5, 3, 4], [1, 3, 7]]
>>> print(matrix_mul(m_a, m_b))
[[63, 55, 71], [48, 82, 42]]

::

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]

::

>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]

..check the exception cases::
==============================

::

>>> m_a = 7
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: m_a must be a list

::

>>> m_a = "String"
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: m_a must be a list

::

>>> m_a = []
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
ValueError: m_a can't be empty

::

>>> m_a = m_b
>>> m_b = []
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
ValueError: m_b can't be empty

::

>>> m_b = [[3, 2.34],[1, "9"]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

::

>>> m_a = [[1, 2],[3, 4], [5]]
>>> m_b = [[6, 7],[8, 9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

::

>>> m_b = [[1, 2],[3, 4], [5]]
>>> m_a = [[6, 7],[8, 9]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

::

>>> m_a = [[1, 2],[3, 4]]
>>> m_b = [[5, 6, 7],[8, 9, 0],[1, 2, 3]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
