how to use ``0- add_integer.py``
=====================================

Function description:
---------------------
    `` add_integer(a, b=98)`` add 2 integers.

Prototype:
----------
    ``def  add_integer(a, b=98)``.

Parametres:
-----------
    ``a`` and ``b``  two integers or floats.

Return:
-------
    ``integer`` the addition of a and b.
    ``TypeError`` if a or b is a non-integer and non-float 

..Import  add_integer from the ``0- add_integer`` module::

>>> add_integer = __import__('0-add_integer'). add_integer

..check the normal cases::

>>> add_integer(-98)
0
>>> add_integer(1, 3)
4
>>> add_integer(2, 3.25)
5
>>> add_integer(2, -8)
-6
>>> add_integer(2.76, 1.24)
3
>>> add_integer(-9.25, -3.05)
-12

..check the exception cases::

>>> add_integer('2', 3)
Traceback (most recent call last):
	...
TypeError: a must be an integer
>>> add_integer('a')
Traceback (most recent call last):
	...
TypeError: a must be an integer
>>> add_integer('2', '3')
Traceback (most recent call last):
	...
TypeError: a must be an integer
>>> add_integer(3, 'b')
Traceback (most recent call last):
	...
TypeError: b must be an integer


