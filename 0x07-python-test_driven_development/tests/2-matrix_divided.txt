how to use ``2-matrix_divided.py``
=====================================

Function description:
---------------------
    `` matrix_divided(matrix, div):`` divides all elements of a matrix by div.

Prototype:
----------
    ``def matrix_divided(matrix, div):``.

Parametres:
-----------
    ``matrix``: list of lists of integers or floats.
    ``div``:  a number (integer or float) is divisor number.

Return:
-------
    ``List``A new matrix divided by div.
    ``TypeError`` if matrix is not a list 

..Import  matrix_divided from the ``2-matrix_divided`` module::

>>> matrix_divided = __import__('2-matrix_divided'). matrix_divided

..check the normal cases::
==========================

>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

>>> matrix = [
... [2, 4, 6, 8],
... [3, 5, 7, 9]
... ]
>>> print(matrix_divided(matrix, 4))
[[0.5, 1.0, 1.5, 2.0], [0.75, 1.25, 1.75, 2.25]]

::

>>> print(matrix)
[[2, 4, 6, 8], [3, 5, 7, 9]]


..check the exception cases::
==============================
_________________________
|...if div is not valid::|
|________________________|
--------------------------

>>> matrix = [
... [2, 4, 6, 8],
... [3, 5, 7, 9]
... ]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

____________________________
|...if matrix is not valid::|
|___________________________|
-----------------------------

::

>>> matrix = "string instead of a list variable"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> matrix = [
... [2, 4, 8],
... [3, 5]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size.

::

>>> matrix = [
... [2, 4, 8],
... [3, 5, '7']
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
